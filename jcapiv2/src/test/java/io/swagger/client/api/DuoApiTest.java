/*
 * JumpCloud APIs
 *  JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DuoAccount;
import io.swagger.client.model.DuoApplication;
import io.swagger.client.model.DuoApplicationReq;
import io.swagger.client.model.DuoApplicationUpdateReq;
import io.swagger.client.model.Errorresponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DuoApi
 */
@Ignore
public class DuoApiTest {

    private final DuoApi api = new DuoApi();

    
    /**
     * Delete a Duo Account
     *
     * Removes the specified Duo account, an error will be returned if the account has some Duo application used in a protected resource.  #### Sample Request &#x60;&#x60;&#x60; curl -X DELETE https://console.jumpcloud.com/api/v2/duo/accounts/{id} \\   -H &#39;accept: application/json&#39; \\   -H &#39;content-type: application/json&#39; \\   -H &#39;x-api-key: {API_KEY}&#39; &#x60;&#x60;&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duoAccountDeleteTest() throws ApiException {
        String id = null;
        String contentType = null;
        String accept = null;
        String xOrgId = null;
        DuoAccount response = api.duoAccountDelete(id, contentType, accept, xOrgId);

        // TODO: test validations
    }
    
    /**
     * Get a Duo Acount
     *
     * This endpoint returns a specific Duo account.  #### Sample Request &#x60;&#x60;&#x60; curl https://console.jumpcloud.com/api/v2/duo/accounts/{id} \\   -H &#39;accept: application/json&#39; \\   -H &#39;content-type: application/json&#39; \\   -H &#39;x-api-key: {API_KEY}&#39; &#x60;&#x60;&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duoAccountGetTest() throws ApiException {
        String id = null;
        String contentType = null;
        String accept = null;
        String xOrgId = null;
        DuoAccount response = api.duoAccountGet(id, contentType, accept, xOrgId);

        // TODO: test validations
    }
    
    /**
     * List Duo Acounts
     *
     * This endpoint returns all the Duo accounts for your organization. Note: There can currently only be one Duo account for your organization.  #### Sample Request &#x60;&#x60;&#x60; curl https://console.jumpcloud.com/api/v2/duo/accounts \\   -H &#39;accept: application/json&#39; \\   -H &#39;content-type: application/json&#39; \\   -H &#39;x-api-key: {API_KEY}&#39; &#x60;&#x60;&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duoAccountListTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String xOrgId = null;
        List<DuoAccount> response = api.duoAccountList(contentType, accept, xOrgId);

        // TODO: test validations
    }
    
    /**
     * Create Duo Account
     *
     * Registers a Duo account for an organization. Only one Duo account will be allowed, in case an organization has a Duo account already a 409 (Conflict) code will be returned.  #### Sample Request &#x60;&#x60;&#x60;   curl -X POST https://console.jumpcloud.com/api/v2/duo/accounts \\   -H &#39;accept: application/json&#39; \\   -H &#39;content-type: application/json&#39; \\   -H &#39;x-api-key: {API_KEY}&#39; \\   -d &#39;{}&#39; &#x60;&#x60;&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duoAccountPostTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String xOrgId = null;
        DuoAccount response = api.duoAccountPost(contentType, accept, xOrgId);

        // TODO: test validations
    }
    
    /**
     * Delete a Duo Application
     *
     * Deletes the specified Duo application, an error will be returned if the application is used in a protected resource.  #### Sample Request &#x60;&#x60;&#x60;   curl -X DELETE https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications/{APPLICATION_ID} \\   -H &#39;accept: application/json&#39; \\   -H &#39;content-type: application/json&#39; \\   -H &#39;x-api-key: {API_KEY}&#39;&#39; &#x60;&#x60;&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duoApplicationDeleteTest() throws ApiException {
        String accountId = null;
        String applicationId = null;
        String contentType = null;
        String accept = null;
        String xOrgId = null;
        DuoApplication response = api.duoApplicationDelete(accountId, applicationId, contentType, accept, xOrgId);

        // TODO: test validations
    }
    
    /**
     * Get a Duo application
     *
     * This endpoint returns a specific Duo application that is associated with the specified Duo account.  #### Sample Request &#x60;&#x60;&#x60;   curl https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications/{APPLICATION_ID} \\   -H &#39;accept: application/json&#39; \\   -H &#39;content-type: application/json&#39; \\   -H &#39;x-api-key: {API_KEY}&#39; &#x60;&#x60;&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duoApplicationGetTest() throws ApiException {
        String accountId = null;
        String applicationId = null;
        String contentType = null;
        String accept = null;
        String xOrgId = null;
        DuoApplication response = api.duoApplicationGet(accountId, applicationId, contentType, accept, xOrgId);

        // TODO: test validations
    }
    
    /**
     * List Duo Applications
     *
     * This endpoint returns all the Duo applications for the specified Duo account. Note: There can currently only be one Duo application for your organization.  #### Sample Request &#x60;&#x60;&#x60;   curl https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications \\   -H &#39;accept: application/json&#39; \\   -H &#39;content-type: application/json&#39; \\   -H &#39;x-api-key: {API_KEY}&#39; &#x60;&#x60;&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duoApplicationListTest() throws ApiException {
        String accountId = null;
        String contentType = null;
        String accept = null;
        String xOrgId = null;
        List<DuoApplication> response = api.duoApplicationList(accountId, contentType, accept, xOrgId);

        // TODO: test validations
    }
    
    /**
     * Create Duo Application
     *
     * Creates a Duo application for your organization and the specified account.  #### Sample Request &#x60;&#x60;&#x60;   curl -X POST https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications \\   -H &#39;accept: application/json&#39; \\   -H &#39;content-type: application/json&#39; \\   -H &#39;x-api-key: {API_KEY}&#39; \\   -d &#39;{     \&quot;name\&quot;: \&quot;Application Name\&quot;,     \&quot;apiHost\&quot;: \&quot;api-1234.duosecurity.com\&quot;,     \&quot;integrationKey\&quot;: \&quot;1234\&quot;,     \&quot;secretKey\&quot;: \&quot;5678\&quot;   }&#39; &#x60;&#x60;&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duoApplicationPostTest() throws ApiException {
        String accountId = null;
        String contentType = null;
        String accept = null;
        DuoApplicationReq body = null;
        String xOrgId = null;
        DuoApplication response = api.duoApplicationPost(accountId, contentType, accept, body, xOrgId);

        // TODO: test validations
    }
    
    /**
     * Update Duo Application
     *
     * Updates the specified Duo application.  #### Sample Request &#x60;&#x60;&#x60;   curl -X PUT https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications/{APPLICATION_ID} \\   -H &#39;accept: application/json&#39; \\   -H &#39;content-type: application/json&#39; \\   -H &#39;x-api-key: {API_KEY}&#39; \\   -d &#39;{     \&quot;name\&quot;: \&quot;Application Name\&quot;,     \&quot;apiHost\&quot;: \&quot;api-1234.duosecurity.com\&quot;,     \&quot;integrationKey\&quot;: \&quot;1234\&quot;,     \&quot;secretKey\&quot;: \&quot;5678\&quot;   }&#39; &#x60;&#x60;&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duoApplicationUpdateTest() throws ApiException {
        String accountId = null;
        String applicationId = null;
        String contentType = null;
        String accept = null;
        DuoApplicationUpdateReq body = null;
        String xOrgId = null;
        DuoApplication response = api.duoApplicationUpdate(accountId, applicationId, contentType, accept, body, xOrgId);

        // TODO: test validations
    }
    
}
