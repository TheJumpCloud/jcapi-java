/*
 * JumpCloud APIs
 *  JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.SystemInsightsApps;
import io.swagger.client.model.SystemInsightsBitlockerInfo;
import io.swagger.client.model.SystemInsightsBrowserPlugins;
import io.swagger.client.model.SystemInsightsChromeExtensions;
import io.swagger.client.model.SystemInsightsDiskEncryption;
import io.swagger.client.model.SystemInsightsDiskInfo;
import io.swagger.client.model.SystemInsightsEtcHosts;
import io.swagger.client.model.SystemInsightsFirefoxAddons;
import io.swagger.client.model.SystemInsightsGroups;
import io.swagger.client.model.SystemInsightsInterfaceAddresses;
import io.swagger.client.model.SystemInsightsKernelInfo;
import io.swagger.client.model.SystemInsightsLogicalDrvies;
import io.swagger.client.model.SystemInsightsMounts;
import io.swagger.client.model.SystemInsightsOsVersion;
import io.swagger.client.model.SystemInsightsPatches;
import io.swagger.client.model.SystemInsightsPrograms;
import io.swagger.client.model.SystemInsightsSafariExtensions;
import io.swagger.client.model.SystemInsightsSystemControls;
import io.swagger.client.model.SystemInsightsSystemInfo;
import io.swagger.client.model.SystemInsightsUptime;
import io.swagger.client.model.SystemInsightsUsers;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SystemInsightsApi
 */
@Ignore
public class SystemInsightsApiTest {

    private final SystemInsightsApi api = new SystemInsightsApi();

    
    /**
     * List System Insights Apps
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;bundle_name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListAppsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsApps> response = api.systeminsightsListApps(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Apps
     *
     * Valid filter fields are &#x60;bundle_name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListApps_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsApps> response = api.systeminsightsListApps_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Bitlocker Info
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;protection_status&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListBitlockerInfoTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsBitlockerInfo> response = api.systeminsightsListBitlockerInfo(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Bitlocker Info
     *
     * Valid filter fields are &#x60;protection_status&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListBitlockerInfo_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsBitlockerInfo> response = api.systeminsightsListBitlockerInfo_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Browser Plugins
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListBrowserPluginsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsBrowserPlugins> response = api.systeminsightsListBrowserPlugins(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Browser Plugins
     *
     * Valid filter fields are &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListBrowserPlugins_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsBrowserPlugins> response = api.systeminsightsListBrowserPlugins_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Chrome Extensions
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListChromeExtensionsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsChromeExtensions> response = api.systeminsightsListChromeExtensions(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Chrome Extensions
     *
     * Valid filter fields are &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListChromeExtensions_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsChromeExtensions> response = api.systeminsightsListChromeExtensions_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Disk Encryption
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;encryption_status&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListDiskEncryptionTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsDiskEncryption> response = api.systeminsightsListDiskEncryption(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Disk Encryption
     *
     * Valid filter fields are &#x60;encryption_status&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListDiskEncryption_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsDiskEncryption> response = api.systeminsightsListDiskEncryption_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Disk Info
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;disk_index&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListDiskInfoTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsDiskInfo> response = api.systeminsightsListDiskInfo(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Disk Info
     *
     * Valid filter fields are &#x60;disk_index&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListDiskInfo_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsBitlockerInfo> response = api.systeminsightsListDiskInfo_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Etc Hosts
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;address&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListEtcHostsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsEtcHosts> response = api.systeminsightsListEtcHosts(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Etc Hosts
     *
     * Valid filter fields are &#x60;address&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListEtcHosts_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsBitlockerInfo> response = api.systeminsightsListEtcHosts_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Firefox Addons
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListFirefoxAddonsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsFirefoxAddons> response = api.systeminsightsListFirefoxAddons(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Firefox Addons
     *
     * Valid filter fields are &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListFirefoxAddons_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsFirefoxAddons> response = api.systeminsightsListFirefoxAddons_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Groups
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;groupname&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListGroupsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsGroups> response = api.systeminsightsListGroups(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Groups
     *
     * Valid filter fields are &#x60;groupname&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListGroups_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsGroups> response = api.systeminsightsListGroups_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Interface Addresses
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;address&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListInterfaceAddressesTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsInterfaceAddresses> response = api.systeminsightsListInterfaceAddresses(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Interface Addresses
     *
     * Valid filter fields are &#x60;address&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListInterfaceAddresses_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsInterfaceAddresses> response = api.systeminsightsListInterfaceAddresses_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Kernel Info
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;version&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListKernelInfoTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsKernelInfo> response = api.systeminsightsListKernelInfo(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Kernel Info
     *
     * Valid filter fields are &#x60;version&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListKernelInfo_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsKernelInfo> response = api.systeminsightsListKernelInfo_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Logical Drives
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;device_id&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListLogicalDrivesTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsLogicalDrvies> response = api.systeminsightsListLogicalDrives(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Logical Drives
     *
     * Valid filter fields are &#x60;device_id&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListLogicalDrives_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsLogicalDrvies> response = api.systeminsightsListLogicalDrives_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Mounts
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;path&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListMountsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsMounts> response = api.systeminsightsListMounts(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Mounts
     *
     * Valid filter fields are &#x60;path&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListMounts_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsMounts> response = api.systeminsightsListMounts_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights OS Version
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;version&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListOsVersionTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsOsVersion> response = api.systeminsightsListOsVersion(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System OS Version
     *
     * Valid filter fields are &#x60;version&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListOsVersion_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsOsVersion> response = api.systeminsightsListOsVersion_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Patches
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;hotfix_id&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListPatchesTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsPatches> response = api.systeminsightsListPatches(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Patches
     *
     * Valid filter fields are &#x60;hotfix_id  &#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListPatches_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsPatches> response = api.systeminsightsListPatches_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Programs
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListProgramsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsPrograms> response = api.systeminsightsListPrograms(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Programs
     *
     * Valid filter fields are &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListPrograms_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsPrograms> response = api.systeminsightsListPrograms_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Safari Extensions
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListSafariExtensionsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsSafariExtensions> response = api.systeminsightsListSafariExtensions(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Safari Extensions
     *
     * Valid filter fields are &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListSafariExtensions_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsSafariExtensions> response = api.systeminsightsListSafariExtensions_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Control
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListSystemControlsTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsSystemControls> response = api.systeminsightsListSystemControls(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System System Controls
     *
     * Valid filter fields are &#x60;name&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListSystemControls_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsSystemControls> response = api.systeminsightsListSystemControls_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Info
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;cpu_subtype&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListSystemInfoTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsSystemInfo> response = api.systeminsightsListSystemInfo(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System System Info
     *
     * Valid filter fields are &#x60;cpu_subtype&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListSystemInfo_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsSystemInfo> response = api.systeminsightsListSystemInfo_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Uptime
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;days&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListUptimeTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsUptime> response = api.systeminsightsListUptime(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Uptime
     *
     * Valid filter fields are &#x60;days&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListUptime_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsUptime> response = api.systeminsightsListUptime_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights Users
     *
     * Valid filter fields are &#x60;system_id&#x60; and &#x60;username&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListUsersTest() throws ApiException {
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsUsers> response = api.systeminsightsListUsers(limit, skip, filter);

        // TODO: test validations
    }
    
    /**
     * List System Insights System Users
     *
     * Valid filter fields are &#x60;username&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systeminsightsListUsers_0Test() throws ApiException {
        String systemId = null;
        Integer limit = null;
        Integer skip = null;
        List<String> filter = null;
        List<SystemInsightsUsers> response = api.systeminsightsListUsers_0(systemId, limit, skip, filter);

        // TODO: test validations
    }
    
}
