/*
 * JumpCloud APIs
 *  JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SystemInsightsLaunchd
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-15T20:11:23.142Z")
public class SystemInsightsLaunchd {
  @SerializedName("collection_time")
  private String collectionTime = null;

  @SerializedName("disabled")
  private String disabled = null;

  @SerializedName("groupname")
  private String groupname = null;

  @SerializedName("inetd_compatibility")
  private String inetdCompatibility = null;

  @SerializedName("keep_alive")
  private String keepAlive = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("on_demand")
  private String onDemand = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("process_type")
  private String processType = null;

  @SerializedName("program")
  private String program = null;

  @SerializedName("program_arguments")
  private String programArguments = null;

  @SerializedName("queue_directories")
  private String queueDirectories = null;

  @SerializedName("root_directory")
  private String rootDirectory = null;

  @SerializedName("run_at_load")
  private String runAtLoad = null;

  @SerializedName("start_interval")
  private String startInterval = null;

  @SerializedName("start_on_mount")
  private String startOnMount = null;

  @SerializedName("stderr_path")
  private String stderrPath = null;

  @SerializedName("stdout_path")
  private String stdoutPath = null;

  @SerializedName("system_id")
  private String systemId = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("watch_paths")
  private String watchPaths = null;

  @SerializedName("working_directory")
  private String workingDirectory = null;

  public SystemInsightsLaunchd collectionTime(String collectionTime) {
    this.collectionTime = collectionTime;
    return this;
  }

   /**
   * Get collectionTime
   * @return collectionTime
  **/
  @ApiModelProperty(value = "")
  public String getCollectionTime() {
    return collectionTime;
  }

  public void setCollectionTime(String collectionTime) {
    this.collectionTime = collectionTime;
  }

  public SystemInsightsLaunchd disabled(String disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @ApiModelProperty(value = "")
  public String getDisabled() {
    return disabled;
  }

  public void setDisabled(String disabled) {
    this.disabled = disabled;
  }

  public SystemInsightsLaunchd groupname(String groupname) {
    this.groupname = groupname;
    return this;
  }

   /**
   * Get groupname
   * @return groupname
  **/
  @ApiModelProperty(value = "")
  public String getGroupname() {
    return groupname;
  }

  public void setGroupname(String groupname) {
    this.groupname = groupname;
  }

  public SystemInsightsLaunchd inetdCompatibility(String inetdCompatibility) {
    this.inetdCompatibility = inetdCompatibility;
    return this;
  }

   /**
   * Get inetdCompatibility
   * @return inetdCompatibility
  **/
  @ApiModelProperty(value = "")
  public String getInetdCompatibility() {
    return inetdCompatibility;
  }

  public void setInetdCompatibility(String inetdCompatibility) {
    this.inetdCompatibility = inetdCompatibility;
  }

  public SystemInsightsLaunchd keepAlive(String keepAlive) {
    this.keepAlive = keepAlive;
    return this;
  }

   /**
   * Get keepAlive
   * @return keepAlive
  **/
  @ApiModelProperty(value = "")
  public String getKeepAlive() {
    return keepAlive;
  }

  public void setKeepAlive(String keepAlive) {
    this.keepAlive = keepAlive;
  }

  public SystemInsightsLaunchd label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public SystemInsightsLaunchd name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SystemInsightsLaunchd onDemand(String onDemand) {
    this.onDemand = onDemand;
    return this;
  }

   /**
   * Get onDemand
   * @return onDemand
  **/
  @ApiModelProperty(value = "")
  public String getOnDemand() {
    return onDemand;
  }

  public void setOnDemand(String onDemand) {
    this.onDemand = onDemand;
  }

  public SystemInsightsLaunchd path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @ApiModelProperty(value = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public SystemInsightsLaunchd processType(String processType) {
    this.processType = processType;
    return this;
  }

   /**
   * Get processType
   * @return processType
  **/
  @ApiModelProperty(value = "")
  public String getProcessType() {
    return processType;
  }

  public void setProcessType(String processType) {
    this.processType = processType;
  }

  public SystemInsightsLaunchd program(String program) {
    this.program = program;
    return this;
  }

   /**
   * Get program
   * @return program
  **/
  @ApiModelProperty(value = "")
  public String getProgram() {
    return program;
  }

  public void setProgram(String program) {
    this.program = program;
  }

  public SystemInsightsLaunchd programArguments(String programArguments) {
    this.programArguments = programArguments;
    return this;
  }

   /**
   * Get programArguments
   * @return programArguments
  **/
  @ApiModelProperty(value = "")
  public String getProgramArguments() {
    return programArguments;
  }

  public void setProgramArguments(String programArguments) {
    this.programArguments = programArguments;
  }

  public SystemInsightsLaunchd queueDirectories(String queueDirectories) {
    this.queueDirectories = queueDirectories;
    return this;
  }

   /**
   * Get queueDirectories
   * @return queueDirectories
  **/
  @ApiModelProperty(value = "")
  public String getQueueDirectories() {
    return queueDirectories;
  }

  public void setQueueDirectories(String queueDirectories) {
    this.queueDirectories = queueDirectories;
  }

  public SystemInsightsLaunchd rootDirectory(String rootDirectory) {
    this.rootDirectory = rootDirectory;
    return this;
  }

   /**
   * Get rootDirectory
   * @return rootDirectory
  **/
  @ApiModelProperty(value = "")
  public String getRootDirectory() {
    return rootDirectory;
  }

  public void setRootDirectory(String rootDirectory) {
    this.rootDirectory = rootDirectory;
  }

  public SystemInsightsLaunchd runAtLoad(String runAtLoad) {
    this.runAtLoad = runAtLoad;
    return this;
  }

   /**
   * Get runAtLoad
   * @return runAtLoad
  **/
  @ApiModelProperty(value = "")
  public String getRunAtLoad() {
    return runAtLoad;
  }

  public void setRunAtLoad(String runAtLoad) {
    this.runAtLoad = runAtLoad;
  }

  public SystemInsightsLaunchd startInterval(String startInterval) {
    this.startInterval = startInterval;
    return this;
  }

   /**
   * Get startInterval
   * @return startInterval
  **/
  @ApiModelProperty(value = "")
  public String getStartInterval() {
    return startInterval;
  }

  public void setStartInterval(String startInterval) {
    this.startInterval = startInterval;
  }

  public SystemInsightsLaunchd startOnMount(String startOnMount) {
    this.startOnMount = startOnMount;
    return this;
  }

   /**
   * Get startOnMount
   * @return startOnMount
  **/
  @ApiModelProperty(value = "")
  public String getStartOnMount() {
    return startOnMount;
  }

  public void setStartOnMount(String startOnMount) {
    this.startOnMount = startOnMount;
  }

  public SystemInsightsLaunchd stderrPath(String stderrPath) {
    this.stderrPath = stderrPath;
    return this;
  }

   /**
   * Get stderrPath
   * @return stderrPath
  **/
  @ApiModelProperty(value = "")
  public String getStderrPath() {
    return stderrPath;
  }

  public void setStderrPath(String stderrPath) {
    this.stderrPath = stderrPath;
  }

  public SystemInsightsLaunchd stdoutPath(String stdoutPath) {
    this.stdoutPath = stdoutPath;
    return this;
  }

   /**
   * Get stdoutPath
   * @return stdoutPath
  **/
  @ApiModelProperty(value = "")
  public String getStdoutPath() {
    return stdoutPath;
  }

  public void setStdoutPath(String stdoutPath) {
    this.stdoutPath = stdoutPath;
  }

  public SystemInsightsLaunchd systemId(String systemId) {
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @ApiModelProperty(value = "")
  public String getSystemId() {
    return systemId;
  }

  public void setSystemId(String systemId) {
    this.systemId = systemId;
  }

  public SystemInsightsLaunchd username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @ApiModelProperty(value = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public SystemInsightsLaunchd watchPaths(String watchPaths) {
    this.watchPaths = watchPaths;
    return this;
  }

   /**
   * Get watchPaths
   * @return watchPaths
  **/
  @ApiModelProperty(value = "")
  public String getWatchPaths() {
    return watchPaths;
  }

  public void setWatchPaths(String watchPaths) {
    this.watchPaths = watchPaths;
  }

  public SystemInsightsLaunchd workingDirectory(String workingDirectory) {
    this.workingDirectory = workingDirectory;
    return this;
  }

   /**
   * Get workingDirectory
   * @return workingDirectory
  **/
  @ApiModelProperty(value = "")
  public String getWorkingDirectory() {
    return workingDirectory;
  }

  public void setWorkingDirectory(String workingDirectory) {
    this.workingDirectory = workingDirectory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemInsightsLaunchd systemInsightsLaunchd = (SystemInsightsLaunchd) o;
    return Objects.equals(this.collectionTime, systemInsightsLaunchd.collectionTime) &&
        Objects.equals(this.disabled, systemInsightsLaunchd.disabled) &&
        Objects.equals(this.groupname, systemInsightsLaunchd.groupname) &&
        Objects.equals(this.inetdCompatibility, systemInsightsLaunchd.inetdCompatibility) &&
        Objects.equals(this.keepAlive, systemInsightsLaunchd.keepAlive) &&
        Objects.equals(this.label, systemInsightsLaunchd.label) &&
        Objects.equals(this.name, systemInsightsLaunchd.name) &&
        Objects.equals(this.onDemand, systemInsightsLaunchd.onDemand) &&
        Objects.equals(this.path, systemInsightsLaunchd.path) &&
        Objects.equals(this.processType, systemInsightsLaunchd.processType) &&
        Objects.equals(this.program, systemInsightsLaunchd.program) &&
        Objects.equals(this.programArguments, systemInsightsLaunchd.programArguments) &&
        Objects.equals(this.queueDirectories, systemInsightsLaunchd.queueDirectories) &&
        Objects.equals(this.rootDirectory, systemInsightsLaunchd.rootDirectory) &&
        Objects.equals(this.runAtLoad, systemInsightsLaunchd.runAtLoad) &&
        Objects.equals(this.startInterval, systemInsightsLaunchd.startInterval) &&
        Objects.equals(this.startOnMount, systemInsightsLaunchd.startOnMount) &&
        Objects.equals(this.stderrPath, systemInsightsLaunchd.stderrPath) &&
        Objects.equals(this.stdoutPath, systemInsightsLaunchd.stdoutPath) &&
        Objects.equals(this.systemId, systemInsightsLaunchd.systemId) &&
        Objects.equals(this.username, systemInsightsLaunchd.username) &&
        Objects.equals(this.watchPaths, systemInsightsLaunchd.watchPaths) &&
        Objects.equals(this.workingDirectory, systemInsightsLaunchd.workingDirectory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collectionTime, disabled, groupname, inetdCompatibility, keepAlive, label, name, onDemand, path, processType, program, programArguments, queueDirectories, rootDirectory, runAtLoad, startInterval, startOnMount, stderrPath, stdoutPath, systemId, username, watchPaths, workingDirectory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemInsightsLaunchd {\n");
    
    sb.append("    collectionTime: ").append(toIndentedString(collectionTime)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    groupname: ").append(toIndentedString(groupname)).append("\n");
    sb.append("    inetdCompatibility: ").append(toIndentedString(inetdCompatibility)).append("\n");
    sb.append("    keepAlive: ").append(toIndentedString(keepAlive)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    onDemand: ").append(toIndentedString(onDemand)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    processType: ").append(toIndentedString(processType)).append("\n");
    sb.append("    program: ").append(toIndentedString(program)).append("\n");
    sb.append("    programArguments: ").append(toIndentedString(programArguments)).append("\n");
    sb.append("    queueDirectories: ").append(toIndentedString(queueDirectories)).append("\n");
    sb.append("    rootDirectory: ").append(toIndentedString(rootDirectory)).append("\n");
    sb.append("    runAtLoad: ").append(toIndentedString(runAtLoad)).append("\n");
    sb.append("    startInterval: ").append(toIndentedString(startInterval)).append("\n");
    sb.append("    startOnMount: ").append(toIndentedString(startOnMount)).append("\n");
    sb.append("    stderrPath: ").append(toIndentedString(stderrPath)).append("\n");
    sb.append("    stdoutPath: ").append(toIndentedString(stdoutPath)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    watchPaths: ").append(toIndentedString(watchPaths)).append("\n");
    sb.append("    workingDirectory: ").append(toIndentedString(workingDirectory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

