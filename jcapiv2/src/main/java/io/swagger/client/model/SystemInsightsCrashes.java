/*
 * JumpCloud APIs
 *  JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SystemInsightsCrashes
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-15T20:11:23.142Z")
public class SystemInsightsCrashes {
  @SerializedName("crash_path")
  private String crashPath = null;

  @SerializedName("crashed_thread")
  private String crashedThread = null;

  @SerializedName("datetime")
  private String datetime = null;

  @SerializedName("exception_codes")
  private String exceptionCodes = null;

  @SerializedName("exception_notes")
  private String exceptionNotes = null;

  @SerializedName("exception_type")
  private String exceptionType = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("parent")
  private String parent = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("pid")
  private String pid = null;

  @SerializedName("registers")
  private String registers = null;

  @SerializedName("responsible")
  private String responsible = null;

  @SerializedName("stack_trace")
  private String stackTrace = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("uid")
  private Integer uid = null;

  @SerializedName("version")
  private String version = null;

  public SystemInsightsCrashes crashPath(String crashPath) {
    this.crashPath = crashPath;
    return this;
  }

   /**
   * Get crashPath
   * @return crashPath
  **/
  @ApiModelProperty(value = "")
  public String getCrashPath() {
    return crashPath;
  }

  public void setCrashPath(String crashPath) {
    this.crashPath = crashPath;
  }

  public SystemInsightsCrashes crashedThread(String crashedThread) {
    this.crashedThread = crashedThread;
    return this;
  }

   /**
   * Get crashedThread
   * @return crashedThread
  **/
  @ApiModelProperty(value = "")
  public String getCrashedThread() {
    return crashedThread;
  }

  public void setCrashedThread(String crashedThread) {
    this.crashedThread = crashedThread;
  }

  public SystemInsightsCrashes datetime(String datetime) {
    this.datetime = datetime;
    return this;
  }

   /**
   * Get datetime
   * @return datetime
  **/
  @ApiModelProperty(value = "")
  public String getDatetime() {
    return datetime;
  }

  public void setDatetime(String datetime) {
    this.datetime = datetime;
  }

  public SystemInsightsCrashes exceptionCodes(String exceptionCodes) {
    this.exceptionCodes = exceptionCodes;
    return this;
  }

   /**
   * Get exceptionCodes
   * @return exceptionCodes
  **/
  @ApiModelProperty(value = "")
  public String getExceptionCodes() {
    return exceptionCodes;
  }

  public void setExceptionCodes(String exceptionCodes) {
    this.exceptionCodes = exceptionCodes;
  }

  public SystemInsightsCrashes exceptionNotes(String exceptionNotes) {
    this.exceptionNotes = exceptionNotes;
    return this;
  }

   /**
   * Get exceptionNotes
   * @return exceptionNotes
  **/
  @ApiModelProperty(value = "")
  public String getExceptionNotes() {
    return exceptionNotes;
  }

  public void setExceptionNotes(String exceptionNotes) {
    this.exceptionNotes = exceptionNotes;
  }

  public SystemInsightsCrashes exceptionType(String exceptionType) {
    this.exceptionType = exceptionType;
    return this;
  }

   /**
   * Get exceptionType
   * @return exceptionType
  **/
  @ApiModelProperty(value = "")
  public String getExceptionType() {
    return exceptionType;
  }

  public void setExceptionType(String exceptionType) {
    this.exceptionType = exceptionType;
  }

  public SystemInsightsCrashes identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @ApiModelProperty(value = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public SystemInsightsCrashes parent(String parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @ApiModelProperty(value = "")
  public String getParent() {
    return parent;
  }

  public void setParent(String parent) {
    this.parent = parent;
  }

  public SystemInsightsCrashes path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @ApiModelProperty(value = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public SystemInsightsCrashes pid(String pid) {
    this.pid = pid;
    return this;
  }

   /**
   * Get pid
   * @return pid
  **/
  @ApiModelProperty(value = "")
  public String getPid() {
    return pid;
  }

  public void setPid(String pid) {
    this.pid = pid;
  }

  public SystemInsightsCrashes registers(String registers) {
    this.registers = registers;
    return this;
  }

   /**
   * Get registers
   * @return registers
  **/
  @ApiModelProperty(value = "")
  public String getRegisters() {
    return registers;
  }

  public void setRegisters(String registers) {
    this.registers = registers;
  }

  public SystemInsightsCrashes responsible(String responsible) {
    this.responsible = responsible;
    return this;
  }

   /**
   * Get responsible
   * @return responsible
  **/
  @ApiModelProperty(value = "")
  public String getResponsible() {
    return responsible;
  }

  public void setResponsible(String responsible) {
    this.responsible = responsible;
  }

  public SystemInsightsCrashes stackTrace(String stackTrace) {
    this.stackTrace = stackTrace;
    return this;
  }

   /**
   * Get stackTrace
   * @return stackTrace
  **/
  @ApiModelProperty(value = "")
  public String getStackTrace() {
    return stackTrace;
  }

  public void setStackTrace(String stackTrace) {
    this.stackTrace = stackTrace;
  }

  public SystemInsightsCrashes type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public SystemInsightsCrashes uid(Integer uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @ApiModelProperty(value = "")
  public Integer getUid() {
    return uid;
  }

  public void setUid(Integer uid) {
    this.uid = uid;
  }

  public SystemInsightsCrashes version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemInsightsCrashes systemInsightsCrashes = (SystemInsightsCrashes) o;
    return Objects.equals(this.crashPath, systemInsightsCrashes.crashPath) &&
        Objects.equals(this.crashedThread, systemInsightsCrashes.crashedThread) &&
        Objects.equals(this.datetime, systemInsightsCrashes.datetime) &&
        Objects.equals(this.exceptionCodes, systemInsightsCrashes.exceptionCodes) &&
        Objects.equals(this.exceptionNotes, systemInsightsCrashes.exceptionNotes) &&
        Objects.equals(this.exceptionType, systemInsightsCrashes.exceptionType) &&
        Objects.equals(this.identifier, systemInsightsCrashes.identifier) &&
        Objects.equals(this.parent, systemInsightsCrashes.parent) &&
        Objects.equals(this.path, systemInsightsCrashes.path) &&
        Objects.equals(this.pid, systemInsightsCrashes.pid) &&
        Objects.equals(this.registers, systemInsightsCrashes.registers) &&
        Objects.equals(this.responsible, systemInsightsCrashes.responsible) &&
        Objects.equals(this.stackTrace, systemInsightsCrashes.stackTrace) &&
        Objects.equals(this.type, systemInsightsCrashes.type) &&
        Objects.equals(this.uid, systemInsightsCrashes.uid) &&
        Objects.equals(this.version, systemInsightsCrashes.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crashPath, crashedThread, datetime, exceptionCodes, exceptionNotes, exceptionType, identifier, parent, path, pid, registers, responsible, stackTrace, type, uid, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemInsightsCrashes {\n");
    
    sb.append("    crashPath: ").append(toIndentedString(crashPath)).append("\n");
    sb.append("    crashedThread: ").append(toIndentedString(crashedThread)).append("\n");
    sb.append("    datetime: ").append(toIndentedString(datetime)).append("\n");
    sb.append("    exceptionCodes: ").append(toIndentedString(exceptionCodes)).append("\n");
    sb.append("    exceptionNotes: ").append(toIndentedString(exceptionNotes)).append("\n");
    sb.append("    exceptionType: ").append(toIndentedString(exceptionType)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    registers: ").append(toIndentedString(registers)).append("\n");
    sb.append("    responsible: ").append(toIndentedString(responsible)).append("\n");
    sb.append("    stackTrace: ").append(toIndentedString(stackTrace)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

