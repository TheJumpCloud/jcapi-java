/*
 * JumpCloud APIs
 *  JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SystemInsightsBattery
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-15T20:11:23.142Z")
public class SystemInsightsBattery {
  @SerializedName("amgerage")
  private Integer amgerage = null;

  @SerializedName("charged")
  private Integer charged = null;

  @SerializedName("charging")
  private Integer charging = null;

  @SerializedName("collection_time")
  private String collectionTime = null;

  @SerializedName("condition")
  private String condition = null;

  @SerializedName("current_capacity")
  private Integer currentCapacity = null;

  @SerializedName("cycle_count")
  private Integer cycleCount = null;

  @SerializedName("designed_capacity")
  private Integer designedCapacity = null;

  @SerializedName("health")
  private String health = null;

  @SerializedName("manufacture_date")
  private Integer manufactureDate = null;

  @SerializedName("manufacturer")
  private String manufacturer = null;

  @SerializedName("max_capacity")
  private Integer maxCapacity = null;

  @SerializedName("minutes_to_full_charge")
  private Integer minutesToFullCharge = null;

  @SerializedName("minutes_until_empty")
  private Integer minutesUntilEmpty = null;

  @SerializedName("model")
  private String model = null;

  @SerializedName("percent_remaining")
  private Integer percentRemaining = null;

  @SerializedName("serial_number")
  private String serialNumber = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("system_id")
  private String systemId = null;

  @SerializedName("voltage")
  private Integer voltage = null;

  public SystemInsightsBattery amgerage(Integer amgerage) {
    this.amgerage = amgerage;
    return this;
  }

   /**
   * Get amgerage
   * @return amgerage
  **/
  @ApiModelProperty(value = "")
  public Integer getAmgerage() {
    return amgerage;
  }

  public void setAmgerage(Integer amgerage) {
    this.amgerage = amgerage;
  }

  public SystemInsightsBattery charged(Integer charged) {
    this.charged = charged;
    return this;
  }

   /**
   * Get charged
   * @return charged
  **/
  @ApiModelProperty(value = "")
  public Integer getCharged() {
    return charged;
  }

  public void setCharged(Integer charged) {
    this.charged = charged;
  }

  public SystemInsightsBattery charging(Integer charging) {
    this.charging = charging;
    return this;
  }

   /**
   * Get charging
   * @return charging
  **/
  @ApiModelProperty(value = "")
  public Integer getCharging() {
    return charging;
  }

  public void setCharging(Integer charging) {
    this.charging = charging;
  }

  public SystemInsightsBattery collectionTime(String collectionTime) {
    this.collectionTime = collectionTime;
    return this;
  }

   /**
   * Get collectionTime
   * @return collectionTime
  **/
  @ApiModelProperty(value = "")
  public String getCollectionTime() {
    return collectionTime;
  }

  public void setCollectionTime(String collectionTime) {
    this.collectionTime = collectionTime;
  }

  public SystemInsightsBattery condition(String condition) {
    this.condition = condition;
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @ApiModelProperty(value = "")
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }

  public SystemInsightsBattery currentCapacity(Integer currentCapacity) {
    this.currentCapacity = currentCapacity;
    return this;
  }

   /**
   * Get currentCapacity
   * @return currentCapacity
  **/
  @ApiModelProperty(value = "")
  public Integer getCurrentCapacity() {
    return currentCapacity;
  }

  public void setCurrentCapacity(Integer currentCapacity) {
    this.currentCapacity = currentCapacity;
  }

  public SystemInsightsBattery cycleCount(Integer cycleCount) {
    this.cycleCount = cycleCount;
    return this;
  }

   /**
   * Get cycleCount
   * @return cycleCount
  **/
  @ApiModelProperty(value = "")
  public Integer getCycleCount() {
    return cycleCount;
  }

  public void setCycleCount(Integer cycleCount) {
    this.cycleCount = cycleCount;
  }

  public SystemInsightsBattery designedCapacity(Integer designedCapacity) {
    this.designedCapacity = designedCapacity;
    return this;
  }

   /**
   * Get designedCapacity
   * @return designedCapacity
  **/
  @ApiModelProperty(value = "")
  public Integer getDesignedCapacity() {
    return designedCapacity;
  }

  public void setDesignedCapacity(Integer designedCapacity) {
    this.designedCapacity = designedCapacity;
  }

  public SystemInsightsBattery health(String health) {
    this.health = health;
    return this;
  }

   /**
   * Get health
   * @return health
  **/
  @ApiModelProperty(value = "")
  public String getHealth() {
    return health;
  }

  public void setHealth(String health) {
    this.health = health;
  }

  public SystemInsightsBattery manufactureDate(Integer manufactureDate) {
    this.manufactureDate = manufactureDate;
    return this;
  }

   /**
   * Get manufactureDate
   * @return manufactureDate
  **/
  @ApiModelProperty(value = "")
  public Integer getManufactureDate() {
    return manufactureDate;
  }

  public void setManufactureDate(Integer manufactureDate) {
    this.manufactureDate = manufactureDate;
  }

  public SystemInsightsBattery manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @ApiModelProperty(value = "")
  public String getManufacturer() {
    return manufacturer;
  }

  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }

  public SystemInsightsBattery maxCapacity(Integer maxCapacity) {
    this.maxCapacity = maxCapacity;
    return this;
  }

   /**
   * Get maxCapacity
   * @return maxCapacity
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxCapacity() {
    return maxCapacity;
  }

  public void setMaxCapacity(Integer maxCapacity) {
    this.maxCapacity = maxCapacity;
  }

  public SystemInsightsBattery minutesToFullCharge(Integer minutesToFullCharge) {
    this.minutesToFullCharge = minutesToFullCharge;
    return this;
  }

   /**
   * Get minutesToFullCharge
   * @return minutesToFullCharge
  **/
  @ApiModelProperty(value = "")
  public Integer getMinutesToFullCharge() {
    return minutesToFullCharge;
  }

  public void setMinutesToFullCharge(Integer minutesToFullCharge) {
    this.minutesToFullCharge = minutesToFullCharge;
  }

  public SystemInsightsBattery minutesUntilEmpty(Integer minutesUntilEmpty) {
    this.minutesUntilEmpty = minutesUntilEmpty;
    return this;
  }

   /**
   * Get minutesUntilEmpty
   * @return minutesUntilEmpty
  **/
  @ApiModelProperty(value = "")
  public Integer getMinutesUntilEmpty() {
    return minutesUntilEmpty;
  }

  public void setMinutesUntilEmpty(Integer minutesUntilEmpty) {
    this.minutesUntilEmpty = minutesUntilEmpty;
  }

  public SystemInsightsBattery model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @ApiModelProperty(value = "")
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }

  public SystemInsightsBattery percentRemaining(Integer percentRemaining) {
    this.percentRemaining = percentRemaining;
    return this;
  }

   /**
   * Get percentRemaining
   * @return percentRemaining
  **/
  @ApiModelProperty(value = "")
  public Integer getPercentRemaining() {
    return percentRemaining;
  }

  public void setPercentRemaining(Integer percentRemaining) {
    this.percentRemaining = percentRemaining;
  }

  public SystemInsightsBattery serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Get serialNumber
   * @return serialNumber
  **/
  @ApiModelProperty(value = "")
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }

  public SystemInsightsBattery state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public SystemInsightsBattery systemId(String systemId) {
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @ApiModelProperty(value = "")
  public String getSystemId() {
    return systemId;
  }

  public void setSystemId(String systemId) {
    this.systemId = systemId;
  }

  public SystemInsightsBattery voltage(Integer voltage) {
    this.voltage = voltage;
    return this;
  }

   /**
   * Get voltage
   * @return voltage
  **/
  @ApiModelProperty(value = "")
  public Integer getVoltage() {
    return voltage;
  }

  public void setVoltage(Integer voltage) {
    this.voltage = voltage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemInsightsBattery systemInsightsBattery = (SystemInsightsBattery) o;
    return Objects.equals(this.amgerage, systemInsightsBattery.amgerage) &&
        Objects.equals(this.charged, systemInsightsBattery.charged) &&
        Objects.equals(this.charging, systemInsightsBattery.charging) &&
        Objects.equals(this.collectionTime, systemInsightsBattery.collectionTime) &&
        Objects.equals(this.condition, systemInsightsBattery.condition) &&
        Objects.equals(this.currentCapacity, systemInsightsBattery.currentCapacity) &&
        Objects.equals(this.cycleCount, systemInsightsBattery.cycleCount) &&
        Objects.equals(this.designedCapacity, systemInsightsBattery.designedCapacity) &&
        Objects.equals(this.health, systemInsightsBattery.health) &&
        Objects.equals(this.manufactureDate, systemInsightsBattery.manufactureDate) &&
        Objects.equals(this.manufacturer, systemInsightsBattery.manufacturer) &&
        Objects.equals(this.maxCapacity, systemInsightsBattery.maxCapacity) &&
        Objects.equals(this.minutesToFullCharge, systemInsightsBattery.minutesToFullCharge) &&
        Objects.equals(this.minutesUntilEmpty, systemInsightsBattery.minutesUntilEmpty) &&
        Objects.equals(this.model, systemInsightsBattery.model) &&
        Objects.equals(this.percentRemaining, systemInsightsBattery.percentRemaining) &&
        Objects.equals(this.serialNumber, systemInsightsBattery.serialNumber) &&
        Objects.equals(this.state, systemInsightsBattery.state) &&
        Objects.equals(this.systemId, systemInsightsBattery.systemId) &&
        Objects.equals(this.voltage, systemInsightsBattery.voltage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amgerage, charged, charging, collectionTime, condition, currentCapacity, cycleCount, designedCapacity, health, manufactureDate, manufacturer, maxCapacity, minutesToFullCharge, minutesUntilEmpty, model, percentRemaining, serialNumber, state, systemId, voltage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemInsightsBattery {\n");
    
    sb.append("    amgerage: ").append(toIndentedString(amgerage)).append("\n");
    sb.append("    charged: ").append(toIndentedString(charged)).append("\n");
    sb.append("    charging: ").append(toIndentedString(charging)).append("\n");
    sb.append("    collectionTime: ").append(toIndentedString(collectionTime)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    currentCapacity: ").append(toIndentedString(currentCapacity)).append("\n");
    sb.append("    cycleCount: ").append(toIndentedString(cycleCount)).append("\n");
    sb.append("    designedCapacity: ").append(toIndentedString(designedCapacity)).append("\n");
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    manufactureDate: ").append(toIndentedString(manufactureDate)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    maxCapacity: ").append(toIndentedString(maxCapacity)).append("\n");
    sb.append("    minutesToFullCharge: ").append(toIndentedString(minutesToFullCharge)).append("\n");
    sb.append("    minutesUntilEmpty: ").append(toIndentedString(minutesUntilEmpty)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    percentRemaining: ").append(toIndentedString(percentRemaining)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    voltage: ").append(toIndentedString(voltage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

