/*
 * JumpCloud APIs
 *  JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SystemInsightsSipConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-12-09T23:54:01.559Z")
public class SystemInsightsSipConfig {
  @SerializedName("collection_time")
  private String collectionTime = null;

  @SerializedName("config_flag")
  private String configFlag = null;

  @SerializedName("enabled")
  private Integer enabled = null;

  @SerializedName("enabled_nvram")
  private Integer enabledNvram = null;

  @SerializedName("system_id")
  private String systemId = null;

  public SystemInsightsSipConfig collectionTime(String collectionTime) {
    this.collectionTime = collectionTime;
    return this;
  }

   /**
   * Get collectionTime
   * @return collectionTime
  **/
  @ApiModelProperty(value = "")
  public String getCollectionTime() {
    return collectionTime;
  }

  public void setCollectionTime(String collectionTime) {
    this.collectionTime = collectionTime;
  }

  public SystemInsightsSipConfig configFlag(String configFlag) {
    this.configFlag = configFlag;
    return this;
  }

   /**
   * Get configFlag
   * @return configFlag
  **/
  @ApiModelProperty(value = "")
  public String getConfigFlag() {
    return configFlag;
  }

  public void setConfigFlag(String configFlag) {
    this.configFlag = configFlag;
  }

  public SystemInsightsSipConfig enabled(Integer enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @ApiModelProperty(value = "")
  public Integer getEnabled() {
    return enabled;
  }

  public void setEnabled(Integer enabled) {
    this.enabled = enabled;
  }

  public SystemInsightsSipConfig enabledNvram(Integer enabledNvram) {
    this.enabledNvram = enabledNvram;
    return this;
  }

   /**
   * Get enabledNvram
   * @return enabledNvram
  **/
  @ApiModelProperty(value = "")
  public Integer getEnabledNvram() {
    return enabledNvram;
  }

  public void setEnabledNvram(Integer enabledNvram) {
    this.enabledNvram = enabledNvram;
  }

  public SystemInsightsSipConfig systemId(String systemId) {
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @ApiModelProperty(value = "")
  public String getSystemId() {
    return systemId;
  }

  public void setSystemId(String systemId) {
    this.systemId = systemId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemInsightsSipConfig systemInsightsSipConfig = (SystemInsightsSipConfig) o;
    return Objects.equals(this.collectionTime, systemInsightsSipConfig.collectionTime) &&
        Objects.equals(this.configFlag, systemInsightsSipConfig.configFlag) &&
        Objects.equals(this.enabled, systemInsightsSipConfig.enabled) &&
        Objects.equals(this.enabledNvram, systemInsightsSipConfig.enabledNvram) &&
        Objects.equals(this.systemId, systemInsightsSipConfig.systemId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collectionTime, configFlag, enabled, enabledNvram, systemId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemInsightsSipConfig {\n");
    
    sb.append("    collectionTime: ").append(toIndentedString(collectionTime)).append("\n");
    sb.append("    configFlag: ").append(toIndentedString(configFlag)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    enabledNvram: ").append(toIndentedString(enabledNvram)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

