/*
 * JumpCloud APIs
 *  JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SystemInsightsSharingPreferences
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-12-09T23:54:01.559Z")
public class SystemInsightsSharingPreferences {
  @SerializedName("bluetooth_sharing")
  private Integer bluetoothSharing = null;

  @SerializedName("collection_time")
  private String collectionTime = null;

  @SerializedName("content_caching")
  private Integer contentCaching = null;

  @SerializedName("disc_sharing")
  private Integer discSharing = null;

  @SerializedName("file_sharing")
  private Integer fileSharing = null;

  @SerializedName("internet_sharing")
  private Integer internetSharing = null;

  @SerializedName("printer_sharing")
  private Integer printerSharing = null;

  @SerializedName("remote_apple_events")
  private Integer remoteAppleEvents = null;

  @SerializedName("remote_login")
  private Integer remoteLogin = null;

  @SerializedName("remote_management")
  private Integer remoteManagement = null;

  @SerializedName("screen_sharing")
  private Integer screenSharing = null;

  @SerializedName("system_id")
  private String systemId = null;

  public SystemInsightsSharingPreferences bluetoothSharing(Integer bluetoothSharing) {
    this.bluetoothSharing = bluetoothSharing;
    return this;
  }

   /**
   * Get bluetoothSharing
   * @return bluetoothSharing
  **/
  @ApiModelProperty(value = "")
  public Integer getBluetoothSharing() {
    return bluetoothSharing;
  }

  public void setBluetoothSharing(Integer bluetoothSharing) {
    this.bluetoothSharing = bluetoothSharing;
  }

  public SystemInsightsSharingPreferences collectionTime(String collectionTime) {
    this.collectionTime = collectionTime;
    return this;
  }

   /**
   * Get collectionTime
   * @return collectionTime
  **/
  @ApiModelProperty(value = "")
  public String getCollectionTime() {
    return collectionTime;
  }

  public void setCollectionTime(String collectionTime) {
    this.collectionTime = collectionTime;
  }

  public SystemInsightsSharingPreferences contentCaching(Integer contentCaching) {
    this.contentCaching = contentCaching;
    return this;
  }

   /**
   * Get contentCaching
   * @return contentCaching
  **/
  @ApiModelProperty(value = "")
  public Integer getContentCaching() {
    return contentCaching;
  }

  public void setContentCaching(Integer contentCaching) {
    this.contentCaching = contentCaching;
  }

  public SystemInsightsSharingPreferences discSharing(Integer discSharing) {
    this.discSharing = discSharing;
    return this;
  }

   /**
   * Get discSharing
   * @return discSharing
  **/
  @ApiModelProperty(value = "")
  public Integer getDiscSharing() {
    return discSharing;
  }

  public void setDiscSharing(Integer discSharing) {
    this.discSharing = discSharing;
  }

  public SystemInsightsSharingPreferences fileSharing(Integer fileSharing) {
    this.fileSharing = fileSharing;
    return this;
  }

   /**
   * Get fileSharing
   * @return fileSharing
  **/
  @ApiModelProperty(value = "")
  public Integer getFileSharing() {
    return fileSharing;
  }

  public void setFileSharing(Integer fileSharing) {
    this.fileSharing = fileSharing;
  }

  public SystemInsightsSharingPreferences internetSharing(Integer internetSharing) {
    this.internetSharing = internetSharing;
    return this;
  }

   /**
   * Get internetSharing
   * @return internetSharing
  **/
  @ApiModelProperty(value = "")
  public Integer getInternetSharing() {
    return internetSharing;
  }

  public void setInternetSharing(Integer internetSharing) {
    this.internetSharing = internetSharing;
  }

  public SystemInsightsSharingPreferences printerSharing(Integer printerSharing) {
    this.printerSharing = printerSharing;
    return this;
  }

   /**
   * Get printerSharing
   * @return printerSharing
  **/
  @ApiModelProperty(value = "")
  public Integer getPrinterSharing() {
    return printerSharing;
  }

  public void setPrinterSharing(Integer printerSharing) {
    this.printerSharing = printerSharing;
  }

  public SystemInsightsSharingPreferences remoteAppleEvents(Integer remoteAppleEvents) {
    this.remoteAppleEvents = remoteAppleEvents;
    return this;
  }

   /**
   * Get remoteAppleEvents
   * @return remoteAppleEvents
  **/
  @ApiModelProperty(value = "")
  public Integer getRemoteAppleEvents() {
    return remoteAppleEvents;
  }

  public void setRemoteAppleEvents(Integer remoteAppleEvents) {
    this.remoteAppleEvents = remoteAppleEvents;
  }

  public SystemInsightsSharingPreferences remoteLogin(Integer remoteLogin) {
    this.remoteLogin = remoteLogin;
    return this;
  }

   /**
   * Get remoteLogin
   * @return remoteLogin
  **/
  @ApiModelProperty(value = "")
  public Integer getRemoteLogin() {
    return remoteLogin;
  }

  public void setRemoteLogin(Integer remoteLogin) {
    this.remoteLogin = remoteLogin;
  }

  public SystemInsightsSharingPreferences remoteManagement(Integer remoteManagement) {
    this.remoteManagement = remoteManagement;
    return this;
  }

   /**
   * Get remoteManagement
   * @return remoteManagement
  **/
  @ApiModelProperty(value = "")
  public Integer getRemoteManagement() {
    return remoteManagement;
  }

  public void setRemoteManagement(Integer remoteManagement) {
    this.remoteManagement = remoteManagement;
  }

  public SystemInsightsSharingPreferences screenSharing(Integer screenSharing) {
    this.screenSharing = screenSharing;
    return this;
  }

   /**
   * Get screenSharing
   * @return screenSharing
  **/
  @ApiModelProperty(value = "")
  public Integer getScreenSharing() {
    return screenSharing;
  }

  public void setScreenSharing(Integer screenSharing) {
    this.screenSharing = screenSharing;
  }

  public SystemInsightsSharingPreferences systemId(String systemId) {
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @ApiModelProperty(value = "")
  public String getSystemId() {
    return systemId;
  }

  public void setSystemId(String systemId) {
    this.systemId = systemId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemInsightsSharingPreferences systemInsightsSharingPreferences = (SystemInsightsSharingPreferences) o;
    return Objects.equals(this.bluetoothSharing, systemInsightsSharingPreferences.bluetoothSharing) &&
        Objects.equals(this.collectionTime, systemInsightsSharingPreferences.collectionTime) &&
        Objects.equals(this.contentCaching, systemInsightsSharingPreferences.contentCaching) &&
        Objects.equals(this.discSharing, systemInsightsSharingPreferences.discSharing) &&
        Objects.equals(this.fileSharing, systemInsightsSharingPreferences.fileSharing) &&
        Objects.equals(this.internetSharing, systemInsightsSharingPreferences.internetSharing) &&
        Objects.equals(this.printerSharing, systemInsightsSharingPreferences.printerSharing) &&
        Objects.equals(this.remoteAppleEvents, systemInsightsSharingPreferences.remoteAppleEvents) &&
        Objects.equals(this.remoteLogin, systemInsightsSharingPreferences.remoteLogin) &&
        Objects.equals(this.remoteManagement, systemInsightsSharingPreferences.remoteManagement) &&
        Objects.equals(this.screenSharing, systemInsightsSharingPreferences.screenSharing) &&
        Objects.equals(this.systemId, systemInsightsSharingPreferences.systemId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bluetoothSharing, collectionTime, contentCaching, discSharing, fileSharing, internetSharing, printerSharing, remoteAppleEvents, remoteLogin, remoteManagement, screenSharing, systemId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemInsightsSharingPreferences {\n");
    
    sb.append("    bluetoothSharing: ").append(toIndentedString(bluetoothSharing)).append("\n");
    sb.append("    collectionTime: ").append(toIndentedString(collectionTime)).append("\n");
    sb.append("    contentCaching: ").append(toIndentedString(contentCaching)).append("\n");
    sb.append("    discSharing: ").append(toIndentedString(discSharing)).append("\n");
    sb.append("    fileSharing: ").append(toIndentedString(fileSharing)).append("\n");
    sb.append("    internetSharing: ").append(toIndentedString(internetSharing)).append("\n");
    sb.append("    printerSharing: ").append(toIndentedString(printerSharing)).append("\n");
    sb.append("    remoteAppleEvents: ").append(toIndentedString(remoteAppleEvents)).append("\n");
    sb.append("    remoteLogin: ").append(toIndentedString(remoteLogin)).append("\n");
    sb.append("    remoteManagement: ").append(toIndentedString(remoteManagement)).append("\n");
    sb.append("    screenSharing: ").append(toIndentedString(screenSharing)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

