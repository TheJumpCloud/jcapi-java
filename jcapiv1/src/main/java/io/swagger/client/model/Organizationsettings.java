/*
 * JumpCloud APIs
 *  JumpCloud's V1 API. This set of endpoints allows JumpCloud customers to manage commands, systems, & system users.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.OrganizationsettingsFeatures;
import io.swagger.client.model.OrganizationsettingsPasswordPolicy;
import io.swagger.client.model.OrganizationsettingsUserPortal;
import java.io.IOException;

/**
 * Organizationsettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-12-09T23:53:52.741Z")
public class Organizationsettings {
  @SerializedName("contactEmail")
  private String contactEmail = null;

  @SerializedName("contactName")
  private String contactName = null;

  @SerializedName("disableLdap")
  private Boolean disableLdap = null;

  @SerializedName("disableUM")
  private Boolean disableUM = null;

  @SerializedName("duplicateLDAPGroups")
  private Boolean duplicateLDAPGroups = null;

  @SerializedName("emailDisclaimer")
  private String emailDisclaimer = null;

  @SerializedName("enableManagedUID")
  private Boolean enableManagedUID = null;

  @SerializedName("features")
  private OrganizationsettingsFeatures features = null;

  @SerializedName("logo")
  private String logo = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Gets or Sets passwordCompliance
   */
  @JsonAdapter(PasswordComplianceEnum.Adapter.class)
  public enum PasswordComplianceEnum {
    CUSTOM("custom"),
    
    PCI3("pci3"),
    
    WINDOWS("windows");

    private String value;

    PasswordComplianceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PasswordComplianceEnum fromValue(String text) {
      for (PasswordComplianceEnum b : PasswordComplianceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PasswordComplianceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PasswordComplianceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PasswordComplianceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PasswordComplianceEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("passwordCompliance")
  private PasswordComplianceEnum passwordCompliance = null;

  @SerializedName("passwordPolicy")
  private OrganizationsettingsPasswordPolicy passwordPolicy = null;

  @SerializedName("showIntro")
  private Boolean showIntro = null;

  @SerializedName("systemUserPasswordExpirationInDays")
  private Integer systemUserPasswordExpirationInDays = null;

  @SerializedName("systemUsersCanEdit")
  private Boolean systemUsersCanEdit = null;

  @SerializedName("userPortal")
  private OrganizationsettingsUserPortal userPortal = null;

  public Organizationsettings contactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * Get contactEmail
   * @return contactEmail
  **/
  @ApiModelProperty(value = "")
  public String getContactEmail() {
    return contactEmail;
  }

  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }

  public Organizationsettings contactName(String contactName) {
    this.contactName = contactName;
    return this;
  }

   /**
   * Get contactName
   * @return contactName
  **/
  @ApiModelProperty(value = "")
  public String getContactName() {
    return contactName;
  }

  public void setContactName(String contactName) {
    this.contactName = contactName;
  }

  public Organizationsettings disableLdap(Boolean disableLdap) {
    this.disableLdap = disableLdap;
    return this;
  }

   /**
   * Get disableLdap
   * @return disableLdap
  **/
  @ApiModelProperty(value = "")
  public Boolean isDisableLdap() {
    return disableLdap;
  }

  public void setDisableLdap(Boolean disableLdap) {
    this.disableLdap = disableLdap;
  }

  public Organizationsettings disableUM(Boolean disableUM) {
    this.disableUM = disableUM;
    return this;
  }

   /**
   * Get disableUM
   * @return disableUM
  **/
  @ApiModelProperty(value = "")
  public Boolean isDisableUM() {
    return disableUM;
  }

  public void setDisableUM(Boolean disableUM) {
    this.disableUM = disableUM;
  }

  public Organizationsettings duplicateLDAPGroups(Boolean duplicateLDAPGroups) {
    this.duplicateLDAPGroups = duplicateLDAPGroups;
    return this;
  }

   /**
   * Get duplicateLDAPGroups
   * @return duplicateLDAPGroups
  **/
  @ApiModelProperty(value = "")
  public Boolean isDuplicateLDAPGroups() {
    return duplicateLDAPGroups;
  }

  public void setDuplicateLDAPGroups(Boolean duplicateLDAPGroups) {
    this.duplicateLDAPGroups = duplicateLDAPGroups;
  }

  public Organizationsettings emailDisclaimer(String emailDisclaimer) {
    this.emailDisclaimer = emailDisclaimer;
    return this;
  }

   /**
   * Get emailDisclaimer
   * @return emailDisclaimer
  **/
  @ApiModelProperty(value = "")
  public String getEmailDisclaimer() {
    return emailDisclaimer;
  }

  public void setEmailDisclaimer(String emailDisclaimer) {
    this.emailDisclaimer = emailDisclaimer;
  }

  public Organizationsettings enableManagedUID(Boolean enableManagedUID) {
    this.enableManagedUID = enableManagedUID;
    return this;
  }

   /**
   * Get enableManagedUID
   * @return enableManagedUID
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableManagedUID() {
    return enableManagedUID;
  }

  public void setEnableManagedUID(Boolean enableManagedUID) {
    this.enableManagedUID = enableManagedUID;
  }

  public Organizationsettings features(OrganizationsettingsFeatures features) {
    this.features = features;
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @ApiModelProperty(value = "")
  public OrganizationsettingsFeatures getFeatures() {
    return features;
  }

  public void setFeatures(OrganizationsettingsFeatures features) {
    this.features = features;
  }

  public Organizationsettings logo(String logo) {
    this.logo = logo;
    return this;
  }

   /**
   * Get logo
   * @return logo
  **/
  @ApiModelProperty(value = "")
  public String getLogo() {
    return logo;
  }

  public void setLogo(String logo) {
    this.logo = logo;
  }

  public Organizationsettings name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Organizationsettings passwordCompliance(PasswordComplianceEnum passwordCompliance) {
    this.passwordCompliance = passwordCompliance;
    return this;
  }

   /**
   * Get passwordCompliance
   * @return passwordCompliance
  **/
  @ApiModelProperty(value = "")
  public PasswordComplianceEnum getPasswordCompliance() {
    return passwordCompliance;
  }

  public void setPasswordCompliance(PasswordComplianceEnum passwordCompliance) {
    this.passwordCompliance = passwordCompliance;
  }

  public Organizationsettings passwordPolicy(OrganizationsettingsPasswordPolicy passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
    return this;
  }

   /**
   * Get passwordPolicy
   * @return passwordPolicy
  **/
  @ApiModelProperty(value = "")
  public OrganizationsettingsPasswordPolicy getPasswordPolicy() {
    return passwordPolicy;
  }

  public void setPasswordPolicy(OrganizationsettingsPasswordPolicy passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
  }

  public Organizationsettings showIntro(Boolean showIntro) {
    this.showIntro = showIntro;
    return this;
  }

   /**
   * Get showIntro
   * @return showIntro
  **/
  @ApiModelProperty(value = "")
  public Boolean isShowIntro() {
    return showIntro;
  }

  public void setShowIntro(Boolean showIntro) {
    this.showIntro = showIntro;
  }

  public Organizationsettings systemUserPasswordExpirationInDays(Integer systemUserPasswordExpirationInDays) {
    this.systemUserPasswordExpirationInDays = systemUserPasswordExpirationInDays;
    return this;
  }

   /**
   * Get systemUserPasswordExpirationInDays
   * @return systemUserPasswordExpirationInDays
  **/
  @ApiModelProperty(value = "")
  public Integer getSystemUserPasswordExpirationInDays() {
    return systemUserPasswordExpirationInDays;
  }

  public void setSystemUserPasswordExpirationInDays(Integer systemUserPasswordExpirationInDays) {
    this.systemUserPasswordExpirationInDays = systemUserPasswordExpirationInDays;
  }

  public Organizationsettings systemUsersCanEdit(Boolean systemUsersCanEdit) {
    this.systemUsersCanEdit = systemUsersCanEdit;
    return this;
  }

   /**
   * Get systemUsersCanEdit
   * @return systemUsersCanEdit
  **/
  @ApiModelProperty(value = "")
  public Boolean isSystemUsersCanEdit() {
    return systemUsersCanEdit;
  }

  public void setSystemUsersCanEdit(Boolean systemUsersCanEdit) {
    this.systemUsersCanEdit = systemUsersCanEdit;
  }

  public Organizationsettings userPortal(OrganizationsettingsUserPortal userPortal) {
    this.userPortal = userPortal;
    return this;
  }

   /**
   * Get userPortal
   * @return userPortal
  **/
  @ApiModelProperty(value = "")
  public OrganizationsettingsUserPortal getUserPortal() {
    return userPortal;
  }

  public void setUserPortal(OrganizationsettingsUserPortal userPortal) {
    this.userPortal = userPortal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organizationsettings organizationsettings = (Organizationsettings) o;
    return Objects.equals(this.contactEmail, organizationsettings.contactEmail) &&
        Objects.equals(this.contactName, organizationsettings.contactName) &&
        Objects.equals(this.disableLdap, organizationsettings.disableLdap) &&
        Objects.equals(this.disableUM, organizationsettings.disableUM) &&
        Objects.equals(this.duplicateLDAPGroups, organizationsettings.duplicateLDAPGroups) &&
        Objects.equals(this.emailDisclaimer, organizationsettings.emailDisclaimer) &&
        Objects.equals(this.enableManagedUID, organizationsettings.enableManagedUID) &&
        Objects.equals(this.features, organizationsettings.features) &&
        Objects.equals(this.logo, organizationsettings.logo) &&
        Objects.equals(this.name, organizationsettings.name) &&
        Objects.equals(this.passwordCompliance, organizationsettings.passwordCompliance) &&
        Objects.equals(this.passwordPolicy, organizationsettings.passwordPolicy) &&
        Objects.equals(this.showIntro, organizationsettings.showIntro) &&
        Objects.equals(this.systemUserPasswordExpirationInDays, organizationsettings.systemUserPasswordExpirationInDays) &&
        Objects.equals(this.systemUsersCanEdit, organizationsettings.systemUsersCanEdit) &&
        Objects.equals(this.userPortal, organizationsettings.userPortal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactEmail, contactName, disableLdap, disableUM, duplicateLDAPGroups, emailDisclaimer, enableManagedUID, features, logo, name, passwordCompliance, passwordPolicy, showIntro, systemUserPasswordExpirationInDays, systemUsersCanEdit, userPortal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organizationsettings {\n");
    
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    contactName: ").append(toIndentedString(contactName)).append("\n");
    sb.append("    disableLdap: ").append(toIndentedString(disableLdap)).append("\n");
    sb.append("    disableUM: ").append(toIndentedString(disableUM)).append("\n");
    sb.append("    duplicateLDAPGroups: ").append(toIndentedString(duplicateLDAPGroups)).append("\n");
    sb.append("    emailDisclaimer: ").append(toIndentedString(emailDisclaimer)).append("\n");
    sb.append("    enableManagedUID: ").append(toIndentedString(enableManagedUID)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    passwordCompliance: ").append(toIndentedString(passwordCompliance)).append("\n");
    sb.append("    passwordPolicy: ").append(toIndentedString(passwordPolicy)).append("\n");
    sb.append("    showIntro: ").append(toIndentedString(showIntro)).append("\n");
    sb.append("    systemUserPasswordExpirationInDays: ").append(toIndentedString(systemUserPasswordExpirationInDays)).append("\n");
    sb.append("    systemUsersCanEdit: ").append(toIndentedString(systemUsersCanEdit)).append("\n");
    sb.append("    userPortal: ").append(toIndentedString(userPortal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

